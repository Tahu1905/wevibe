const playlists = [
  {
    name: "Ai C≈©n Ph·∫£i B·∫Øt ƒê·∫ßu T·ª´ ƒê√¢u ƒê√≥",
    image: "img/hieuthuhai.jpg",
    songs: [
      { name: "Mamma Mia", 
        artist: "HIEUTHUHAI", 
        file: "/music/mamma_mia.mp3", 
        image: "‚Ä¶" 
      
      },
      { name: "H·∫πn G·∫∑p Em D∆∞·ªõi √Ånh TrƒÉng", 
        artist: "HIEUTHUHAI",
        file: "/music/hen_gap_em.mp3",
        image: "‚Ä¶",
        lyrics: `"V√¨ anh mu·ªën v√†o ng√†y mai ta C√πng nhau s√°nh b∆∞·ªõc m·∫∑c bao √°nh m·∫Øt
                Ngo√†i nh·ªØng l·ªùi n√≥i l√†m ƒë·∫ßy tai ra
                Em l√† duy nh·∫•t anh kh√¥ng th·ªÉ ƒë√°nh m·∫•t
                ƒê√¥i m·∫Øt h∆∞·ªõng v·ªÅ em m·ªôt ch√∫t th√¥i m√† th·ªùi gian tr√¥i em r·∫°ng ng·ªùi
                Ng·∫Øm nh√¨n em th√™m m·ªôt ph√∫t th√¥i m√† ƒë√¥i m√¥i mang n·ª• c∆∞·ªùi‚Äù`,
        credits: [
        { name: "HIEUTHUHAI", roles: "Performer" },
        { name: "HURRYKNG", roles: "Performer" },
        { name: "MANBO", roles: "Performer" },
        { name: "Lam Bach Phuc Hau", roles: "Songwriter" },
        { name: "Tr·∫ßn Minh Hi·∫øu", roles: "Songwriter" },
        { name: "Pham Bao Khang", roles: "Songwriter" },
        ] 
      },
      { name: "Kh√¥ng Th·ªÉ Say", 
        artist: "HIEUTHUHAI",
        file: "/music/khong_the_say.mp3", 
        image: "‚Ä¶" },
      { name: 
        "Exit Sign", 
        artist: "HIEUTHUHAI",
        file: "/music/exit_sign.mp3",
        image: "‚Ä¶" },

    ]
  },
  {
    name: "Gabriel",
    image: "img/Gabriel.webp",
    songs: [
      { name: "Somebody", 
        artist: "keshi",
        file: "/music/somebody.mp3", 
        lyrics: `"You're somebody I just met tonight‚Ä¶‚Äù`,
        credits: [
          { name: "Keshi", roles: "Artist / Producer / Writer" },
          { name: "Chloe George", roles: "Writer" }
        ],
        image: "‚Ä¶" },
      { name: "Westside", 
        artist: "keshi", 
        file: "/music/westside.mp3", 
        image: "‚Ä¶" },
      { name: "Understand", 
        artist: "keshi", 
        ile: "/music/understand.mp3", 
        image: "‚Ä¶" },
      { name: "Limbo", 
        artist: "keshi", 
        file: "/music/limbo.mp3", 
        image: "‚Ä¶" },
      ]
  },
  {
    name: "LOI CHOI: The Neo Pop Punk",
    image: "img/loichoi.webp",
    songs: [
      { name: "Ph√≥ng ƒê·ªï Tim Em", 
        artist: "Wren Evans & itsnk", 
        file: "/music/phong_do_tim_em.mp3", 
        image: "‚Ä¶" },
      { name: "Call Me", 
        artist: "Wren Evans & itsnk", 
        file: "/music/call_me.mp3", 
        image: "‚Ä¶" },
      { name: "C·∫ßu Vƒ©nh Tuy", 
        artist: "Wren Evans & itsnk", 
        file: "/music/cau_vinh_tuy.mp3", 
        image: "‚Ä¶" },
      { name: "T·ª´ng Quen", 
        artist: "Wren Evans & itsnk", 
        file: "/music/tung_quen.mp3", 
        image: "‚Ä¶" },
      { name: "B√© ∆†i T·ª´ T·ª´", 
        artist: "Wren Evans & itsnk", 
        file: "/music/be_oi_tu_tu.mp3", 
        image: "‚Ä¶" },
    ]
  },
  {
    name: "LAST SWEET",
    image: "/img/sojulove.webp",
    songs: [
      { name: "Can We Love", artist: "Obito", file: "/music/can_we_love.mp3", image: "‚Ä¶" }
      // C√≥ th·ªÉ th√™m c√°c track kh√°c n·∫øu c√≥ th√¥ng tin th√™m
    ]
  }
];


function loadSidebar() {
  const sidebar = document.getElementById("playlist-sidebar");
  playlists.forEach((pl, idx) => {
    const li = document.createElement("li");
    li.innerHTML = `<img src="${pl.image}" alt="${pl.name}" /><span>${pl.name}</span>`;
    li.onclick = () => loadPlaylist(idx);
    sidebar.appendChild(li);
  });
}
function renderAllSongs() {
  const allSongsView = document.getElementById("all-songs-view");
  const titleEl = document.getElementById("playlist-title");
  const list = document.getElementById("song-list");

  titleEl.innerText = "All Songs";
  list.innerHTML = "";

  playlists.forEach(pl => {
    pl.songs.forEach(song => {
      const li = document.createElement("li");
      li.innerText = `${song.name} ‚Äì ${song.artist}`;
      li.onclick = () => playSong(song);
      list.appendChild(li);
    });
  });

  // Hi·ªÉn th·ªã danh s√°ch b√†i h√°t
  document.getElementById("playlist-grid").style.display = "none";
  document.getElementById("song-view").classList.add("hidden");
  allSongsView.classList.remove("hidden");
}

function renderPlaylistGrid() {
  const grid = document.getElementById("playlist-grid");
  grid.innerHTML = "";
  playlists.forEach((pl, idx) => {
    const card = document.createElement("div");
    card.className = "playlist-card";
    card.onclick = () => loadPlaylist(idx);
    card.innerHTML = `<img src="${pl.image}" alt="${pl.name}" /><div class="name">${pl.name}</div>`;
    grid.appendChild(card);
  });
}
function playSong(song) {
  // C·∫≠p nh·∫≠t thanh Now Playing
  document.getElementById("now-title").textContent = song.name;
  document.getElementById("now-artist").textContent = song.artist;
  document.getElementById("now-album").src = song.image;

  const audio = document.getElementById("player");
  audio.src = song.file;
  audio.play();

  // üëâ Hi·ªÉn th·ªã ·ªü ph·∫ßn n·ªôi dung ch√≠nh
  document.getElementById("song-img").src = song.image;
  document.getElementById("song-title").textContent = song.name;
  document.getElementById("song-artist").textContent = song.artist;
  document.getElementById("lyrics-text").textContent = song.lyrics || getLyricsFor(song.name, song.artist);


  document.getElementById("song-view").classList.remove("hidden");
  document.getElementById("playlist-grid").style.display = "none";
  document.getElementById("all-songs-view")?.classList?.add("hidden");
  document.getElementById("main-heading")?.classList.add("hidden");

// C·∫≠p nh·∫≠t panel b√™n ph·∫£i
document.getElementById("right-banner-img").src = song.image;
document.getElementById("right-song-title").textContent = song.name;
document.getElementById("right-song-artist").textContent = song.artist;
document.getElementById("right-lyrics").textContent = song.lyrics || getLyricsFor(song.name, song.artist);
document.getElementById("rightSongPanel").classList.remove("hidden");

// Hi·ªán panel
document.getElementById("rightSongPanel").classList.remove("hidden");

// üëâ C·∫≠p nh·∫≠t ph·∫ßn Credits
const creditList = document.getElementById("credits-list");
creditList.innerHTML = ""; // X√≥a c≈©

if (song.credits && song.credits.length > 0) {
  song.credits.forEach(credit => {
    const li = document.createElement("li");
    li.innerHTML = `<strong>${credit.name}</strong> ‚Äì ${credit.roles}`;
    creditList.appendChild(li);
  });
} else {
  creditList.innerHTML = "<li>No credits available</li>";
}

// L∆∞u tr·∫°ng th√°i y√™u th√≠ch
if (!window.favorites) window.favorites = new Set();
const favBtn = document.getElementById("song-fav-toggle");
if (favorites.has(song.name)) {
  favBtn.classList.remove("fa-plus-circle");
  favBtn.classList.add("fa-check-circle");
} else {
  favBtn.classList.remove("fa-check-circle");
  favBtn.classList.add("fa-plus-circle");
}
window.currentSongForFav = song;
}
function toggleFavorite() {
  const song = window.currentSongForFav;
  if (!song) return;

  const favBtn = document.getElementById("song-fav-toggle");

  if (favorites.has(song.name)) {
    favorites.delete(song.name);
    favBtn.classList.remove("fa-check-circle");
    favBtn.classList.add("fa-plus-circle");
  } else {
    favorites.add(song.name);
    favBtn.classList.remove("fa-plus-circle");
    favBtn.classList.add("fa-check-circle");
  }
}

function togglePanelSize() {
  const panel = document.getElementById("rightSongPanel");
  const icon = panel.querySelector(".expand-btn");

  panel.classList.toggle("expanded");
  icon.classList.toggle("fa-expand");
  icon.classList.toggle("fa-compress");
}



function getLyricsFor(name, artist) {
  if (name === "Shape of You") {
    return `The club isn't the best place to find a lover\nSo the bar is where I go...`;
  } else if (name === "Blinding Lights") {
    return `I said, ooh, I'm blinded by the lights\nNo, I can't sleep until I feel your touch`;
  } else if (name === "Levitating") {
    return `If you wanna run away with me\nI know a galaxy and I can take you for a ride`;
  }
  return "üéµ Lyrics not available.";
}


function loadPlaylist(index) {
  const pl = playlists[index];

  // C·∫≠p nh·∫≠t ti√™u ƒë·ªÅ
  document.getElementById("playlist-title").innerText = pl.name;

  // Danh s√°ch b√†i h√°t
  const list = document.getElementById("song-list");
  list.innerHTML = "";

  pl.songs.forEach(song => {
    const li = document.createElement("li");
    li.innerText = `${song.name} ‚Äì ${song.artist}`;
    li.onclick = () => playSong(song); // Click v√†o b√†i n√†o m·ªõi ph√°t b√†i ƒë√≥
    list.appendChild(li);
  });

  // Hi·ªán ph·∫ßn danh s√°ch b√†i h√°t
  document.getElementById("all-songs-view")?.classList.remove("hidden");

  // ·∫®n c√°c ph·∫ßn kh√°c
  document.getElementById("playlist-grid").style.display = "none";
  document.getElementById("song-view")?.classList?.add("hidden");
  document.getElementById("rightSongPanel")?.classList?.add("hidden");
}


loadSidebar();
renderPlaylistGrid();
function showTab(tabName) {
  const tabs = document.querySelectorAll('.tabs .tab');
  tabs.forEach(t => t.classList.remove('active'));

  const selected = Array.from(tabs).find(t => t.textContent.toLowerCase() === tabName.toLowerCase());
  if (selected) selected.classList.add('active');

  const grid = document.getElementById("playlist-grid");
  const songView = document.getElementById("song-view");
  const allSongsView = document.getElementById("all-songs-view"); // Th√™m d√≤ng n√†y

  if (tabName === "playlists") {
    grid.style.display = "grid";
    songView.classList.add("hidden");
    allSongsView.classList.add("hidden"); // ·∫®n all songs
  } else if (tabName === "songs") {
    renderAllSongs(); // G·ªçi h√†m render
  } else {
    // N·∫øu sau n√†y c√≥ artists
    grid.style.display = "none";
    songView.classList.add("hidden");
    allSongsView.classList.add("hidden");
  }
}


function selectSidebarTab(tabName) {
  const tabs = document.querySelectorAll('.sidebar-tabs-horizontal .tab');
  tabs.forEach(t => t.classList.remove('active'));

  const selected = Array.from(tabs).find(t => t.textContent.toLowerCase() === tabName.toLowerCase());
  if (selected) selected.classList.add('active');

  // üëâ Ch·ªâ ·∫£nh h∆∞·ªüng sidebar ‚Äî KH√îNG ·∫£nh h∆∞·ªüng ph·∫ßn n·ªôi dung ch√≠nh
  document.getElementById("playlist-sidebar").style.display = tabName === 'playlists' ? 'block' : 'none';

  // B·∫°n c√≥ th·ªÉ th√™m sidebar n·ªôi dung ri√™ng cho songs, artists ·ªü ƒë√¢y n·∫øu mu·ªën
}
function createPlaylist() {
  const name = document.getElementById("playlistName").value;
  fetch("http://localhost:8080/api/playlists", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ name: name })
  }).then(res => {
    if (res.ok) alert("‚úÖ Playlist created!");
    else alert("‚ùå Failed to create.");
  });
}
function toggleAddForm() {
  document.getElementById("createPlaylistPanel").classList.remove("hidden");
}

function submitNewPlaylist() {
  const name = document.getElementById("newPlaylistName").value.trim();
  const selectedSongs = Array.from(document.querySelectorAll('.song-select-list input:checked'))
    .map(input => input.value);

  if (!name) return alert("Please enter playlist name");

  // G·ª≠i d·ªØ li·ªáu v·ªÅ backend (Spring Boot ho·∫∑c log test)
  console.log("üéµ Creating playlist:", name, selectedSongs);

  // T√πy: fetch POST v·ªÅ server n·∫øu c·∫ßn

  alert("‚úÖ Playlist created!");
  document.getElementById("createPlaylistPanel").classList.add("hidden");
}
function goHome() {
  // ·∫®n c√°c view ph·ª•
  document.getElementById("createPlaylistPanel")?.classList.add("hidden");
  document.getElementById("song-view")?.classList.add("hidden");
  document.getElementById("rightSongPanel")?.classList.add("hidden");
  document.getElementById("all-songs-view")?.classList.add("hidden");

  // Hi·ªán l·∫°i l∆∞·ªõi playlist
  document.getElementById("playlist-grid").style.display = "grid";

  // Reset tab ti√™u ƒë·ªÅ n·∫øu c√≥
  document.querySelectorAll(".tabs .tab").forEach(t => t.classList.remove("active"));
  const playlistTab = Array.from(document.querySelectorAll(".tabs .tab"))
    .find(t => t.textContent.toLowerCase() === "playlists");
  if (playlistTab) playlistTab.classList.add("active");

  // ƒê·∫∑t l·∫°i ti√™u ƒë·ªÅ ch√≠nh n·∫øu c·∫ßn
  const title = document.querySelector(".content h2");
  if (title) title.textContent = "ALL Playlists";
}

function toggleUserDropdown() {
  const dropdown = document.getElementById("userDropdown");
  dropdown.classList.toggle("hidden");
}

// ƒê√≥ng dropdown khi click ngo√†i khu v·ª±c
window.addEventListener("click", function (e) {
  const avatar = document.querySelector(".user-avatar");
  const dropdown = document.getElementById("userDropdown");
  if (!avatar.contains(e.target) && !dropdown.contains(e.target)) {
    dropdown.classList.add("hidden");
  }
});
