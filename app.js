const playlists = [
  {
    name: "Ai C≈©n Ph·∫£i B·∫Øt ƒê·∫ßu T·ª´ ƒê√¢u ƒê√≥",
    image: "img/hieuthuhai.jpg",
    songs: [
      { name: "Mamma Mia", 
        artist: "HIEUTHUHAI",
        artist_img: "/img/hieuthuhaiii.webp",  
        file: "mammamia.mp3", 
        image: "images.jpg" 
      
      },
      { name: "H·∫πn G·∫∑p Em D∆∞·ªõi √Ånh TrƒÉng", 
        artist: "HIEUTHUHAI",
         artist_img: "HIEUTHUHAI", 
        file: "/music/hen_gap_em.mp3",
       image: "img/default.jpg"
,
        lyrics: `"V√¨ anh mu·ªën v√†o ng√†y mai ta C√πng nhau s√°nh b∆∞·ªõc m·∫∑c bao √°nh m·∫Øt
                Ngo√†i nh·ªØng l·ªùi n√≥i l√†m ƒë·∫ßy tai ra
                Em l√† duy nh·∫•t anh kh√¥ng th·ªÉ ƒë√°nh m·∫•t
                ƒê√¥i m·∫Øt h∆∞·ªõng v·ªÅ em m·ªôt ch√∫t th√¥i m√† th·ªùi gian tr√¥i em r·∫°ng ng·ªùi
                Ng·∫Øm nh√¨n em th√™m m·ªôt ph√∫t th√¥i m√† ƒë√¥i m√¥i mang n·ª• c∆∞·ªùi‚Äù`,
      },
      { name: "Kh√¥ng Th·ªÉ Say", 
        artist: "HIEUTHUHAI",
        artist_img: "/img/hieuthuhaiii.webp",  
        file: "/music/khong_the_say.mp3", 
       image: "img/default.jpg"
 },
      { name: 
        "Exit Sign", 
        artist: "HIEUTHUHAI",
         artist_img: "/img/hieuthuhaiii.webp",  
        file: "/music/exit_sign.mp3",
       image: "img/default.jpg"
 },

    ]
  },
  {
    name: "Gabriel",
    image: "img/Gabriel.webp",
    songs: [
      { name: "Somebody", 
        artist: "keshi",
        artist_img: "HIEUTHUHAI", 
        file: "/music/somebody.mp3", 
        lyrics: `"You're somebody I just met tonight‚Ä¶‚Äù`,
        credits: [
          { name: "Keshi", roles: "Artist / Producer / Writer" },
          { name: "Chloe George", roles: "Writer" }
        ],
       image: "img/default.jpg"
 },
      { name: "Westside", 
        artist: "keshi",
        artist_img: "HIEUTHUHAI", 
        file: "/music/westside.mp3", 
       image: "img/default.jpg"
 },
      { name: "Understand", 
        artist: "keshi",
        artist_img: "HIEUTHUHAI",  
        file: "/music/understand.mp3", 
       image: "img/default.jpg"
 },
      { name: "Limbo", 
        artist: "keshi",
         artist_img: "HIEUTHUHAI", 
        file: "/music/limbo.mp3", 
       image: "img/default.jpg"
 },
      ]
  },
  {
    name: "LOI CHOI: The Neo Pop Punk",
    image: "img/loichoi.webp",
    songs: [
      { name: "Ph√≥ng ƒê·ªï Tim Em", 
        artist: "Wren Evans & itsnk",
        artist_img: "HIEUTHUHAI",  
        file: "/music/phong_do_tim_em.mp3", 
       image: "img/default.jpg"
 },
      { name: "Call Me", 
        artist: "Wren Evans & itsnk", 
        artist_img: "HIEUTHUHAI", 
        file: "/music/call_me.mp3", 
       image: "img/default.jpg"
 },
      { name: "C·∫ßu Vƒ©nh Tuy", 
        artist: "Wren Evans & itsnk", 
        artist_img: "HIEUTHUHAI", 
        file: "/music/cau_vinh_tuy.mp3", 
       image: "img/default.jpg"
 },
      { name: "T·ª´ng Quen", 
        artist: "Wren Evans & itsnk", 
        artist_img: "HIEUTHUHAI", 
        file: "/music/tung_quen.mp3", 
       image: "img/default.jpg"
 },
      { name: "B√© ∆†i T·ª´ T·ª´", 
        artist: "Wren Evans & itsnk", 
        artist_img: "HIEUTHUHAI", 
        file: "/music/be_oi_tu_tu.mp3", 
       image: "img/default.jpg"
 },
    ]
  },
  {
    name: "LAST SWEET",
    image: "img/sojulove.webp",
    songs: [
      { name: "Can We Love",
         artist: "Obito", 
         artist_img: "HIEUTHUHAI", 
         file: "/music/can_we_love.mp3",
         image: "img/default.jpg"
 }
      // C√≥ th·ªÉ th√™m c√°c track kh√°c n·∫øu c√≥ th√¥ng tin th√™m
    ]
  }
];


function loadSidebar() {
  const sidebar = document.getElementById("playlist-sidebar");
  playlists.forEach((pl, idx) => {
    const li = document.createElement("li");
    li.innerHTML = `<img src="${pl.image}" alt="${pl.name}" /><span>${pl.name}</span>`;
    li.onclick = () => loadPlaylist(idx);
    sidebar.appendChild(li);
  });
}
function renderAllSongs() {
  const allSongsView = document.getElementById("all-songs-view");
  const titleEl = document.getElementById("playlist-title");
  const list = document.getElementById("song-list");

  titleEl.innerText = "All Songs";
  list.innerHTML = "";

  playlists.forEach(pl => {
    pl.songs.forEach(song => {
      const li = document.createElement("li");
      li.innerText = `${song.name} ‚Äì ${song.artist}`;
      li.onclick = () => playSong(song);
      list.appendChild(li);
    });
  });

  // Hi·ªÉn th·ªã danh s√°ch b√†i h√°t
  document.getElementById("playlist-grid").style.display = "none";
  document.getElementById("song-view").classList.add("hidden");
  allSongsView.classList.remove("hidden");
}


function renderHomePlaylists() {
  const section = document.getElementById("playlist-grid");
  section.innerHTML = ""; // Clear c≈©

  // Gi·∫£ l·∫≠p nh√≥m recently ‚Äì b·∫°n c√≥ th·ªÉ thay b·∫±ng d·ªØ li·ªáu th·ª±c t·ª´ localStorage
  const recentlyPlayed = playlists.slice(0, 2);
  const trendingNow = playlists.slice().reverse();

  renderPlaylistGroup("üéß Recently Played", recentlyPlayed);
  renderPlaylistGroup("üéµ Your Playlists", playlists);
  renderPlaylistGroup("üî• Trending Now", trendingNow);
}

// D√πng l·∫°i h√†m ph·ª•:
function renderPlaylistGroup(title, playlistGroup) {
  const section = document.getElementById("playlist-grid");

  const group = document.createElement("div");
  group.className = "playlist-group";

  const heading = document.createElement("h3");
  heading.textContent = title;

  const row = document.createElement("div");
  row.className = "playlist-row";

  playlistGroup.forEach((pl, idx) => {
    const card = document.createElement("div");
    card.className = "playlist-card";
    card.onclick = () => loadPlaylist(idx);
    card.innerHTML = `
      <img src="${pl.image}" alt="${pl.name}" />
      <div class="name">${pl.name}</div>
    `;
    row.appendChild(card);
  });

  group.appendChild(heading);
  group.appendChild(row);
  section.appendChild(group);
}

function playSong(song) {

   console.log("‚ñ∂Ô∏è Playing:", song.name);

  // check ph·∫ßn panel
  const panel = document.getElementById("rightSongPanel");
  if (!panel) {
    console.error("‚ùå Kh√¥ng t√¨m th·∫•y #rightSongPanel");
  } else {
    console.log("‚úÖ Found panel");
    panel.classList.remove("hidden");
  }
  // C·∫≠p nh·∫≠t thanh Now Playing
  document.getElementById("now-title").textContent = song.name;
  document.getElementById("now-artist").textContent = song.artist;
  document.getElementById("now-album").src = song.image;

  const audio = document.getElementById("player");
  audio.src = song.file;
  audio.play();

  // üëâ Hi·ªÉn th·ªã ·ªü ph·∫ßn n·ªôi dung ch√≠nh
  document.getElementById("song-img").src = song.image;
  document.getElementById("song-title").textContent = song.name;
  document.getElementById("song-artist").textContent = song.artist;
  document.getElementById("lyrics-text").textContent = song.lyrics;

  document.getElementById("song-view").classList.remove("hidden");
  document.getElementById("playlist-grid").style.display = "none";
  document.getElementById("all-songs-view")?.classList?.add("hidden");
  document.getElementById("main-heading")?.classList.add("hidden");

// C·∫≠p nh·∫≠t panel b√™n ph·∫£i
document.getElementById("right-banner-img").src = song.artist_img;
document.getElementById("right-song-title").textContent = song.name;
document.getElementById("right-song-artist").textContent = song.artist;
document.getElementById("right-lyrics").textContent = song.lyrics;
document.getElementById("rightSongPanel").classList.remove("hidden");

// Hi·ªán panel
document.getElementById("rightSongPanel").classList.remove("hidden");


// L∆∞u tr·∫°ng th√°i y√™u th√≠ch
if (!window.favorites) window.favorites = new Set();
const favBtn = document.getElementById("song-fav-toggle");
if (favorites.has(song.name)) {
  favBtn.classList.remove("fa-plus-circle");
  favBtn.classList.add("fa-check-circle");
} else {
  favBtn.classList.remove("fa-check-circle");
  favBtn.classList.add("fa-plus-circle");
}
window.currentSongForFav = song;
}
function toggleFavorite() {
  const song = window.currentSongForFav;
  if (!song) return;

  const favBtn = document.getElementById("song-fav-toggle");

  if (favorites.has(song.name)) {
    favorites.delete(song.name);
    favBtn.classList.remove("fa-check-circle");
    favBtn.classList.add("fa-plus-circle");
  } else {
    favorites.add(song.name);
    favBtn.classList.remove("fa-plus-circle");
    favBtn.classList.add("fa-check-circle");
  }
}

function togglePanelSize() {
  const panel = document.getElementById("rightSongPanel");
  const icon = panel.querySelector(".expand-btn");

  panel.classList.toggle("expanded");
  icon.classList.toggle("fa-expand");
  icon.classList.toggle("fa-compress");
}

function loadPlaylist(index) {
  const pl = playlists[index];
  currentPlaylist = pl.songs; // üîπ L∆∞u to√†n b·ªô danh s√°ch b√†i h√°t
  currentIndex = 0; // üîπ Reset v·ªã tr√≠ b√†i ƒë·∫ßu

  // C·∫≠p nh·∫≠t ti√™u ƒë·ªÅ
  document.getElementById("playlist-title").innerText = pl.name;

  // Danh s√°ch b√†i h√°t
  const list = document.getElementById("song-list");
  list.innerHTML = "";

  pl.songs.forEach((song, i) => {
    const li = document.createElement("li");
    li.innerText = `${song.name} ‚Äì ${song.artist}`;
    li.onclick = () => {
      currentIndex = i;       // ‚úÖ L∆∞u v·ªã tr√≠ b√†i ƒëang ph√°t
      playSong(song);         // ‚úÖ Ph√°t b√†i
    };
    list.appendChild(li);
  });

  // Hi·ªán ph·∫ßn danh s√°ch b√†i h√°t
  document.getElementById("all-songs-view")?.classList.remove("hidden");

  // ·∫®n c√°c ph·∫ßn kh√°c
  document.getElementById("playlist-grid").style.display = "none";
  document.getElementById("song-view")?.classList?.add("hidden");
  document.getElementById("rightSongPanel")?.classList?.add("hidden");
}

function playNextSong() {
  if (!currentPlaylist.length) return;
  currentIndex = (currentIndex + 1) % currentPlaylist.length;
  playSong(currentPlaylist[currentIndex]);
}

function playPreviousSong() {
  if (!currentPlaylist.length) return;
  currentIndex = (currentIndex - 1 + currentPlaylist.length) % currentPlaylist.length;
  playSong(currentPlaylist[currentIndex]);
}


loadSidebar();
renderHomePlaylists();

function showTab(tabName) {
  const tabs = document.querySelectorAll('.tabs .tab');
  tabs.forEach(t => t.classList.remove('active'));

  const selected = Array.from(tabs).find(t => t.textContent.toLowerCase() === tabName.toLowerCase());
  if (selected) selected.classList.add('active');

  const grid = document.getElementById("playlist-grid");
  const songView = document.getElementById("song-view");
  const allSongsView = document.getElementById("all-songs-view"); // Th√™m d√≤ng n√†y

  if (tabName === "playlists") {
    grid.style.display = "grid";
    songView.classList.add("hidden");
    allSongsView.classList.add("hidden"); // ·∫®n all songs
  } else if (tabName === "songs") {
    renderAllSongs(); // G·ªçi h√†m render
  } else {
    // N·∫øu sau n√†y c√≥ artists
    grid.style.display = "none";
    songView.classList.add("hidden");
    allSongsView.classList.add("hidden");
  }
}
function renderSidebarArtists() {
  const artists = [
    { name: 'HIEUTHUHAI', avatar: '/img/hieuthuhaiii.webp' },
    { name: 'S∆°n T√πng M-TP', avatar: '/img/sontung.jpg' },
    { name: 'JustaTee', avatar: '/img/tee.webp' }
  ];

  const list = document.getElementById('sidebar-artists-view');
  list.innerHTML = '';

  artists.forEach(artist => {
    const li = document.createElement('li');
    li.className = 'sidebar-artist-item';
    li.innerHTML = `
      <img class="sidebar-artist-avatar" src="${artist.avatar}" alt="${artist.name}">
      <span class="sidebar-artist-name">${artist.name}</span>
    `;
    li.onclick = () => showArtistProfile(artist);
    list.appendChild(li);
  });
}
function selectSidebarTab(tabName) {
  // 1. Reset tr·∫°ng th√°i active cho n√∫t tab
  const tabs = document.querySelectorAll('.sidebar-tabs-horizontal .tab');
  tabs.forEach(t => t.classList.remove('active'));

  const selected = Array.from(tabs).find(t => t.textContent.toLowerCase() === tabName.toLowerCase());
  if (selected) selected.classList.add('active');

  // 2. ·∫®n h·∫øt c√°c view sidebar
  ["playlist-sidebar", "sidebar-songs-view", "sidebar-artists-view"].forEach(id => {
    document.getElementById(id)?.classList.add("hidden");
  });

  // 3. Hi·ªán ƒë√∫ng tab ƒë∆∞·ª£c ch·ªçn
  if (tabName === 'playlists') {
    document.getElementById("playlist-sidebar")?.classList.remove("hidden");
  } else if (tabName === 'songs') {
    document.getElementById("sidebar-songs-view")?.classList.remove("hidden");
  } else if (tabName === 'artists') {
    document.getElementById("sidebar-artists-view")?.classList.remove("hidden");
    renderSidebarArtists(); // üü¢ Ph·∫£i g·ªçi sau khi hi·ªÉn th·ªã
  }
}

function showArtistProfile(artist) {
  alert(`üë§ Artist: ${artist.name}`);
  // sau n√†y c√≥ th·ªÉ hi·ªÉn th·ªã artist-view ri√™ng
}


function createPlaylist() {
  const name = document.getElementById("playlistName").value;
  fetch("http://localhost:8080/api/playlists", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ name: name })
  }).then(res => {
    if (res.ok) alert("‚úÖ Playlist created!");
    else alert("‚ùå Failed to create.");
  });
}
function toggleAddForm() {
  document.getElementById("createPlaylistPanel").classList.remove("hidden");
}

function submitNewPlaylist() {
  const name = document.getElementById("newPlaylistName").value.trim();
  const selectedSongs = Array.from(document.querySelectorAll('.song-select-list input:checked'))
    .map(input => input.value);

  if (!name) return alert("Please enter playlist name");

  // G·ª≠i d·ªØ li·ªáu v·ªÅ backend (Spring Boot ho·∫∑c log test)
  console.log("üéµ Creating playlist:", name, selectedSongs);

  // T√πy: fetch POST v·ªÅ server n·∫øu c·∫ßn

  alert("‚úÖ Playlist created!");
  document.getElementById("createPlaylistPanel").classList.add("hidden");
}
function goHome() {
  // ·∫®n c√°c view ph·ª•
  document.getElementById("createPlaylistPanel")?.classList.add("hidden");
  document.getElementById("song-view")?.classList.add("hidden");
  document.getElementById("rightSongPanel")?.classList.add("hidden");
  document.getElementById("all-songs-view")?.classList.add("hidden");

  // Hi·ªán l·∫°i l∆∞·ªõi playlist
  document.getElementById("playlist-grid").style.display = "grid";

  // Reset tab ti√™u ƒë·ªÅ n·∫øu c√≥
  document.querySelectorAll(".tabs .tab").forEach(t => t.classList.remove("active"));
  const playlistTab = Array.from(document.querySelectorAll(".tabs .tab"))
    .find(t => t.textContent.toLowerCase() === "playlists");
  if (playlistTab) playlistTab.classList.add("active");

  // ƒê·∫∑t l·∫°i ti√™u ƒë·ªÅ ch√≠nh n·∫øu c·∫ßn
  const title = document.querySelector(".content h2");
  if (title) title.textContent = "All Playlists";
}

function toggleUserDropdown() {
  const dropdown = document.getElementById("userDropdown");
  dropdown.classList.toggle("hidden");
}

// ƒê√≥ng dropdown khi click ngo√†i khu v·ª±c
window.addEventListener("click", function (e) {
  const avatar = document.querySelector(".user-avatar");
  const dropdown = document.getElementById("userDropdown");
  if (!avatar.contains(e.target) && !dropdown.contains(e.target)) {
    dropdown.classList.add("hidden");
  }
});

document.addEventListener("DOMContentLoaded", function () {
  const loginPopup = document.getElementById("loginPopup");
  const popupContainer = document.getElementById("popupContainer");
  const registerBtn = document.getElementById("signUpToggle");
  const loginBtn = document.getElementById("signInToggle");
  const loginLink = document.getElementById("loginLink");

  loginLink.addEventListener("click", function (e) {
    e.preventDefault(); 
    loginPopup.classList.remove("hidden");
    popupContainer.classList.remove("active"); 
  });

  registerBtn.addEventListener("click", () => {
    popupContainer.classList.add("active");
  });

  loginBtn.addEventListener("click", () => {
    popupContainer.classList.remove("active");
  });

  window.addEventListener("click", function (e) {
    if (
      loginPopup &&
      !popupContainer.contains(e.target) &&
      !e.target.closest(".user-menu")
    ) {
      loginPopup.classList.add("hidden");
    }
  });
});
document.addEventListener("DOMContentLoaded", function () {
  const audio = document.getElementById("mainAudio");
  const playBtn = document.getElementById("playPauseBtn");
  const icon = playBtn.querySelector("i");
  const progressBar = document.getElementById("progressBar");
  const currentTimeText = document.getElementById("currentTime");
  const durationText = document.getElementById("duration");
  const volumeBar = document.getElementById("volumeBar");

  // ƒê·ªãnh d·∫°ng mm:ss
  function formatTime(sec) {
    const minutes = Math.floor(sec / 60);
    const seconds = Math.floor(sec % 60);
    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
  }

  // Khi nh·∫•n n√∫t Play/Pause
  playBtn.addEventListener("click", function () {
    if (audio.paused) {
      audio.play();
      icon.classList.remove("fa-play-circle");
      icon.classList.add("fa-pause-circle");
    } else {
      audio.pause();
      icon.classList.remove("fa-pause-circle");
      icon.classList.add("fa-play-circle");
    }
  });

  // Khi nh·∫°c ƒëang ph√°t, c·∫≠p nh·∫≠t ti·∫øn ƒë·ªô
  audio.addEventListener("timeupdate", function () {
    const progressPercent = (audio.currentTime / audio.duration) * 100;
    progressBar.value = progressPercent || 0;
    currentTimeText.textContent = formatTime(audio.currentTime);
    durationText.textContent = formatTime(audio.duration);
  });

  // K√©o thanh ti·∫øn ƒë·ªô ƒë·ªÉ tua
  progressBar.addEventListener("input", function () {
    const seekTime = (audio.duration * progressBar.value) / 100;
    audio.currentTime = seekTime;
  });

  // ƒêi·ªÅu ch·ªânh volume
  volumeBar.addEventListener("input", function () {
    audio.volume = volumeBar.value / 100;
  });
});
